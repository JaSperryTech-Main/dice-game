{"version":3,"file":"Home.BNKROgUK.js","sources":["../../src/components/Game/DicePage.jsx","../../src/components/Game/DisplayBar.jsx","../../src/pages/Home.jsx"],"sourcesContent":["import { usePlayer } from '@contexts/PlayerContext';\r\nimport { useDice } from '@contexts/DiceContext.jsx';\r\nimport Roll from 'roll';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst roll = new Roll();\r\n\r\nconst DicePage = () => {\r\n  const { player, addGold } = usePlayer();\r\n  const { dice } = useDice();\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const diceRefs = useRef([]);\r\n\r\n  // Reset refs when dice change\r\n  useEffect(() => {\r\n    diceRefs.current = player.dices.map((_, i) => diceRefs.current[i] || null);\r\n  }, [player.dices]);\r\n\r\n  const onRoll = async () => {\r\n    if (isRolling) return;\r\n    setIsRolling(true);\r\n\r\n    const currentDices = [...player.dices];\r\n    const currentRollSpeed = player.upgrades.rollSpeed || 0;\r\n\r\n    // Generate results\r\n    const randomResults = currentDices.map((diceType) => {\r\n      const diceConfig = dice[diceType] || { sides: 1, multiplier: 1 };\r\n      let result = 1;\r\n\r\n      try {\r\n        result = roll.roll(`1d${diceConfig.sides}`).result;\r\n      } catch (err) {\r\n        console.error(`Error rolling dice ${diceType}:`, err);\r\n      }\r\n\r\n      return {\r\n        diceType,\r\n        result,\r\n        finalResult: result * diceConfig.multiplier,\r\n        sides: diceConfig.sides,\r\n      };\r\n    });\r\n\r\n    const totalGold = randomResults.reduce(\r\n      (sum, { finalResult }) => sum + finalResult,\r\n      0\r\n    );\r\n\r\n    // Animate dice rolls\r\n    const animationPromises = currentDices.map((_, index) => {\r\n      return new Promise((resolve) => {\r\n        const diceElement =\r\n          diceRefs.current[index]?.querySelector('.dice-text');\r\n        if (!diceElement) {\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        let rollingDone = false;\r\n        const sides = randomResults[index].sides;\r\n\r\n        // Apply animation class\r\n        diceElement.classList.add('rolling');\r\n\r\n        // Rolling animation\r\n        const rollInterval = setInterval(() => {\r\n          if (rollingDone) return;\r\n          diceElement.textContent = Math.floor(Math.random() * sides) + 1;\r\n        }, 50);\r\n\r\n        const baseDuration = Math.random() * (5 - 2) + 2;\r\n        const speedReduction = Math.min(\r\n          0.5 * currentRollSpeed * 1000,\r\n          baseDuration * 1000 - 500\r\n        );\r\n        const duration = Math.max(500, baseDuration * 1000 - speedReduction);\r\n\r\n        setTimeout(() => {\r\n          rollingDone = true;\r\n          clearInterval(rollInterval);\r\n          diceElement.classList.remove('rolling');\r\n          diceElement.textContent = randomResults[index].result;\r\n          resolve();\r\n        }, duration);\r\n      });\r\n    });\r\n\r\n    await Promise.all(animationPromises);\r\n    addGold(totalGold);\r\n\r\n    // Show toast notification\r\n    toast.success(`🎲 You earned ${totalGold} gold!`, {\r\n      position: 'top-right',\r\n      autoClose: 1000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      progress: undefined,\r\n      theme: 'light',\r\n    });\r\n\r\n    setIsRolling(false);\r\n  };\r\n\r\n  const rarityColors = {\r\n    common: 'border-gray-400 text-gray-600',\r\n    uncommon: 'border-green-500 text-green-500',\r\n    rare: 'border-blue-500 text-blue-500',\r\n    epic: 'border-purple-500 text-purple-500',\r\n    legendary: 'border-yellow-500 text-yellow-500',\r\n  };\r\n\r\n  const sortedDices = [...player.dices].sort((a, b) => {\r\n    const aData = dice[a] || { multiplier: 1, sides: 6 };\r\n    const bData = dice[b] || { multiplier: 1, sides: 6 };\r\n\r\n    if (bData.multiplier !== aData.multiplier) {\r\n      return bData.multiplier - aData.multiplier;\r\n    }\r\n    return bData.sides - aData.sides;\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex content-center items-center h-screen w-[66vw] flex-col relative\">\r\n      <div className=\"grid grid-cols-5 gap-x-[5vh] gap-y-[5vw] w-[85%] min-h-[66vh] justify-items-center mt-[5vh] mb-[15vh] overflow-y-auto p-2.5\">\r\n        {sortedDices.map((diceType, index) => {\r\n          const diceConfig = dice[diceType] || { multiplier: 1, sides: 6 };\r\n\r\n          return (\r\n            <div\r\n              key={`dice-${diceType}-${index}`}\r\n              ref={(el) => (diceRefs.current[index] = el)}\r\n              role=\"button\"\r\n              aria-label={`Dice: d${diceConfig.sides} x${diceConfig.multiplier}`}\r\n              className={`dice w-[120px] h-[120px] bg-white border-2 ${\r\n                rarityColors[diceConfig.id || 'common']\r\n              } flex justify-center items-center text-[50px] font-bold rounded-[15px] shadow-[0_4px_8px_rgba(0,0,0,0.2)] transition-transform duration-200 ease-in-out transform hover:scale-105 cursor-pointer relative ${\r\n                isRolling ? 'pointer-events-none opacity-70' : ''\r\n              }`}\r\n            >\r\n              <p className=\"dice-text\">1</p>\r\n              <div className=\"absolute bottom-2 right-2 text-[16px] font-semibold text-gray-600\">\r\n                x{diceConfig.multiplier}\r\n              </div>\r\n              <div className=\"absolute top-2 left-2 text-[14px] font-semibold text-gray-600\">\r\n                d{diceConfig.sides}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <button\r\n        onClick={onRoll}\r\n        disabled={isRolling}\r\n        aria-label=\"Roll Dice\"\r\n        className={`absolute bottom-5 left-1/2 transform -translate-x-1/2 px-8 py-4 text-lg cursor-pointer border-none rounded-full transition-all duration-300 ease-in-out ${\r\n          isRolling\r\n            ? 'bg-gray-400 cursor-not-allowed'\r\n            : 'bg-green-500 hover:bg-green-600 text-white'\r\n        }`}\r\n      >\r\n        {isRolling ? `Rolling...` : 'Roll Dice'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DicePage;\r\n","import { useState, useEffect } from 'react';\r\nimport { usePlayer } from '@contexts/PlayerContext.jsx';\r\nimport { useUpgrade } from '@contexts/UpgradeContext.jsx';\r\nimport { usePacks } from '@contexts/PackContext.jsx';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst DisplayBar = () => {\r\n  const { player, removeGold, addDice, getUpgrades, addUpgrade } = usePlayer();\r\n  const { upgrades } = useUpgrade();\r\n  const { Packs } = usePacks();\r\n  const [activePage, setActivePage] = useState('upgrades');\r\n  const [disabledPack, setDisabledPack] = useState(null);\r\n  const [upgradesState, setUpgradesState] = useState({});\r\n\r\n  const handleBuyUpgrade = (id, amount = 1) => {\r\n    const upgrade = upgrades.find((u) => u.id === id);\r\n    if (!upgrade) {\r\n      console.error(`Upgrade ${id} not found.`);\r\n      return;\r\n    }\r\n\r\n    if (upgrade.max <= upgradesState[id]) {\r\n      toast.warn(`❌ ${upgrade.title} is already at maximum level!`, {\r\n        position: 'top-right',\r\n        autoClose: 1000,\r\n        pauseOnHover: false,\r\n        hideProgressBar: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const currentCount = upgradesState[id] || 0;\r\n    const totalCost = upgrade.cost * (currentCount + 1);\r\n\r\n    if (player.gold >= totalCost) {\r\n      removeGold(totalCost);\r\n      addUpgrade(id, amount);\r\n      setUpgradesState((prev) => ({\r\n        ...prev,\r\n        [id]: currentCount + 1,\r\n      }));\r\n      setUpgradesState(getUpgrades());\r\n\r\n      toast.success(\r\n        `🆙 ${upgrade.title} upgraded to level ${currentCount + 1}!`,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 1000,\r\n          pauseOnHover: false,\r\n          hideProgressBar: true,\r\n        }\r\n      );\r\n    } else {\r\n      toast.error(\r\n        `💰 You need ${totalCost - player.gold} more gold for ${upgrade.title}`,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 1000,\r\n          pauseOnHover: false,\r\n          hideProgressBar: true,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleOpenPack = (packName, packInstance) => {\r\n    if (player.gold >= packInstance.cost) {\r\n      removeGold(packInstance.cost);\r\n      const item = packInstance.chooseItem();\r\n      addDice(item);\r\n      setDisabledPack(packName);\r\n\r\n      toast.success(`🎁 Opened ${packName} and got a new ${item} die!`, {\r\n        position: 'top-right',\r\n        autoClose: 1000,\r\n        pauseOnHover: false,\r\n        hideProgressBar: true,\r\n      });\r\n\r\n      setTimeout(() => setDisabledPack(null), 250);\r\n    } else {\r\n      toast.error(\r\n        `💰 You need ${\r\n          packInstance.cost - player.gold\r\n        } more gold to open ${packName}`,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 1000,\r\n          pauseOnHover: false,\r\n          hideProgressBar: true,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpgradesState(getUpgrades());\r\n  }, [player.upgrades]);\r\n\r\n  return (\r\n    <aside className=\"w-[33vw] h-screen p-5 box-border bg-[#f8f8f8] flex flex-col text-center\">\r\n      {/* Gold + Tabs */}\r\n      <div className=\"w-full flex justify-between items-center mb-5\">\r\n        <p className=\"text-lg font-semibold\">Gold: {player.gold.toFixed(0)}</p>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => setActivePage('upgrades')}\r\n            className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n          >\r\n            Upgrades\r\n          </button>\r\n          <button\r\n            onClick={() => setActivePage('packs')}\r\n            className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n          >\r\n            Packs\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {activePage === 'upgrades' && (\r\n        <div className=\"flex flex-col overflow-y-auto max-h-full pr-2\">\r\n          {/* Available Upgrades - Vertical List */}\r\n          <div className=\"space-y-5 mr-5\">\r\n            {upgrades.map((upgrade) => {\r\n              const currentCount = upgradesState[upgrade.id] || 0;\r\n              const nextCost = upgrade.cost * (currentCount + 1);\r\n              const isMaxed = currentCount >= upgrade.max;\r\n              const isAffordable = player.gold >= nextCost;\r\n              const isDisabled = isMaxed || !isAffordable;\r\n              const label = isMaxed\r\n                ? 'Max'\r\n                : currentCount > 0\r\n                ? 'Upgrade'\r\n                : 'Buy';\r\n\r\n              return (\r\n                <div\r\n                  key={upgrade.id}\r\n                  className={`grid grid-cols-2 grid-rows-2 gap-3 p-5 border rounded-xl bg-white shadow-lg hover:shadow-xl transition-shadow duration-300`}\r\n                >\r\n                  <h2 className=\"col-start-1 row-start-1 self-start justify-self-start text-xl font-semibold text-gray-800\">\r\n                    {upgrade.title}\r\n                    <p>\r\n                      {currentCount > 0 &&\r\n                        `(Lv. ${currentCount} / Lv. ${upgrade.max})`}\r\n                    </p>\r\n                  </h2>\r\n                  <h4 className=\"col-start-2 row-start-1 self-start justify-self-end text-md text-gray-700\">\r\n                    Cost: {nextCost}\r\n                  </h4>\r\n                  <p className=\"col-start-1 row-start-2 self-end justify-self-start text-sm text-gray-500\">\r\n                    {upgrade.description}\r\n                  </p>\r\n                  <button\r\n                    onClick={() => handleBuyUpgrade(upgrade.id)}\r\n                    className={`\r\n    col-start-2 row-start-2 self-end justify-self-end \r\n    px-4 py-2 rounded-lg shadow-md transition-all duration-200\r\n    ${\r\n      isDisabled\r\n        ? 'bg-blue-300 cursor-not-allowed'\r\n        : 'bg-blue-500 hover:bg-blue-600 cursor-pointer'\r\n    }\r\n    text-white\r\n  `}\r\n                    disabled={isDisabled}\r\n                  >\r\n                    {label}\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Packs Section */}\r\n      {activePage === 'packs' && (\r\n        <div className=\"h-full overflow-y-auto flex flex-col gap-4 p-2 rounded\">\r\n          {Object.entries(Packs).map(([packName, packInstance]) => {\r\n            const isAffordable = player.gold >= packInstance.cost;\r\n            const isDisabled = !isAffordable || disabledPack === packName;\r\n            const buttonClass = isDisabled\r\n              ? 'bg-green-300 cursor-not-allowed'\r\n              : 'bg-green-500 hover:bg-green-600 cursor-pointer';\r\n\r\n            const label =\r\n              disabledPack === packName ? 'Opened!' : `Open ${packName}`;\r\n\r\n            return (\r\n              <div\r\n                key={packName}\r\n                className=\"grid grid-cols-1 gap-2 p-4 border rounded bg-white shadow\"\r\n              >\r\n                <h2 className=\"text-xl font-bold\">{packName}</h2>\r\n                <p className=\"text-gray-700\">Cost: {packInstance.cost} coins</p>\r\n                <button\r\n                  className={`${buttonClass} text-black px-4 py-2 rounded`}\r\n                  onClick={() => handleOpenPack(packName, packInstance)}\r\n                  disabled={isDisabled}\r\n                >\r\n                  {label}\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default DisplayBar;\r\n","import DicePage from '../components/Game/DicePage.jsx';\r\nimport DisplayBar from '../components/Game/DisplayBar.jsx';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"bg-[#e0f7fa] m-0 flex content-center items-center min-h-screen h-full\">\r\n      <DisplayBar />\r\n      <DicePage />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["roll","Roll","DicePage","player","addGold","usePlayer","dice","useDice","isRolling","setIsRolling","useState","diceRefs","useRef","useEffect","_","i","onRoll","currentDices","currentRollSpeed","randomResults","diceType","diceConfig","result","err","totalGold","sum","finalResult","animationPromises","index","resolve","diceElement","_a","rollingDone","sides","rollInterval","baseDuration","speedReduction","duration","toast","rarityColors","sortedDices","a","b","aData","bData","jsxs","jsx","el","DisplayBar","removeGold","addDice","getUpgrades","addUpgrade","upgrades","useUpgrade","Packs","usePacks","activePage","setActivePage","disabledPack","setDisabledPack","upgradesState","setUpgradesState","handleBuyUpgrade","id","amount","upgrade","u","currentCount","totalCost","prev","handleOpenPack","packName","packInstance","item","nextCost","isMaxed","isAffordable","isDisabled","label","buttonClass","Home"],"mappings":"mKAMA,MAAMA,EAAO,IAAIC,EAEXC,EAAW,IAAM,CACrB,KAAM,CAAE,OAAAC,EAAQ,QAAAC,CAAQ,EAAIC,EAAU,EAChC,CAAE,KAAAC,CAAK,EAAIC,EAAQ,EACnB,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1CC,EAAWC,EAAO,OAAA,EAAE,EAG1BC,EAAAA,UAAU,IAAM,CACLF,EAAA,QAAUR,EAAO,MAAM,IAAI,CAACW,EAAGC,IAAMJ,EAAS,QAAQI,CAAC,GAAK,IAAI,CAAA,EACxE,CAACZ,EAAO,KAAK,CAAC,EAEjB,MAAMa,EAAS,SAAY,CACzB,GAAIR,EAAW,OACfC,EAAa,EAAI,EAEjB,MAAMQ,EAAe,CAAC,GAAGd,EAAO,KAAK,EAC/Be,EAAmBf,EAAO,SAAS,WAAa,EAGhDgB,EAAgBF,EAAa,IAAKG,GAAa,CAC7C,MAAAC,EAAaf,EAAKc,CAAQ,GAAK,CAAE,MAAO,EAAG,WAAY,CAAE,EAC/D,IAAIE,EAAS,EAET,GAAA,CACFA,EAAStB,EAAK,KAAK,KAAKqB,EAAW,KAAK,EAAE,EAAE,aACrCE,EAAK,CACZ,QAAQ,MAAM,sBAAsBH,CAAQ,IAAKG,CAAG,CAAA,CAG/C,MAAA,CACL,SAAAH,EACA,OAAAE,EACA,YAAaA,EAASD,EAAW,WACjC,MAAOA,EAAW,KACpB,CAAA,CACD,EAEKG,EAAYL,EAAc,OAC9B,CAACM,EAAK,CAAE,YAAAC,KAAkBD,EAAMC,EAChC,CACF,EAGMC,EAAoBV,EAAa,IAAI,CAACH,EAAGc,IACtC,IAAI,QAASC,GAAY,OAC9B,MAAMC,GACJC,EAAApB,EAAS,QAAQiB,CAAK,IAAtB,YAAAG,EAAyB,cAAc,cACzC,GAAI,CAACD,EAAa,CACRD,EAAA,EACR,MAAA,CAGF,IAAIG,EAAc,GACZ,MAAAC,EAAQd,EAAcS,CAAK,EAAE,MAGvBE,EAAA,UAAU,IAAI,SAAS,EAG7B,MAAAI,EAAe,YAAY,IAAM,CACjCF,IACJF,EAAY,YAAc,KAAK,MAAM,KAAK,OAAO,EAAIG,CAAK,EAAI,IAC7D,EAAE,EAECE,EAAe,KAAK,OAAO,EAAK,EAAS,EACzCC,EAAiB,KAAK,IAC1B,GAAMlB,EAAmB,IACzBiB,EAAe,IAAO,GACxB,EACME,EAAW,KAAK,IAAI,IAAKF,EAAe,IAAOC,CAAc,EAEnE,WAAW,IAAM,CACDJ,EAAA,GACd,cAAcE,CAAY,EACdJ,EAAA,UAAU,OAAO,SAAS,EAC1BA,EAAA,YAAcX,EAAcS,CAAK,EAAE,OACvCC,EAAA,GACPQ,CAAQ,CAAA,CACZ,CACF,EAEK,MAAA,QAAQ,IAAIV,CAAiB,EACnCvB,EAAQoB,CAAS,EAGXc,EAAA,QAAQ,iBAAiBd,CAAS,SAAU,CAChD,SAAU,YACV,UAAW,IACX,gBAAiB,GACjB,aAAc,GACd,aAAc,GACd,UAAW,GACX,SAAU,OACV,MAAO,OAAA,CACR,EAEDf,EAAa,EAAK,CACpB,EAEM8B,EAAe,CACnB,OAAQ,gCACR,SAAU,kCACV,KAAM,gCACN,KAAM,oCACN,UAAW,mCACb,EAEMC,EAAc,CAAC,GAAGrC,EAAO,KAAK,EAAE,KAAK,CAACsC,EAAGC,IAAM,CAC7C,MAAAC,EAAQrC,EAAKmC,CAAC,GAAK,CAAE,WAAY,EAAG,MAAO,CAAE,EAC7CG,EAAQtC,EAAKoC,CAAC,GAAK,CAAE,WAAY,EAAG,MAAO,CAAE,EAE/C,OAAAE,EAAM,aAAeD,EAAM,WACtBC,EAAM,WAAaD,EAAM,WAE3BC,EAAM,MAAQD,EAAM,KAAA,CAC5B,EAGC,OAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,uEACb,SAAA,CAAAC,MAAC,OAAI,UAAU,8HACZ,WAAY,IAAI,CAAC1B,EAAUQ,IAAU,CAC9B,MAAAP,EAAaf,EAAKc,CAAQ,GAAK,CAAE,WAAY,EAAG,MAAO,CAAE,EAG7D,OAAAyB,EAAA,KAAC,MAAA,CAEC,IAAME,GAAQpC,EAAS,QAAQiB,CAAK,EAAImB,EACxC,KAAK,SACL,aAAY,UAAU1B,EAAW,KAAK,KAAKA,EAAW,UAAU,GAChE,UAAW,8CACTkB,EAAalB,EAAW,IAAM,QAAQ,CACxC,6MACEb,EAAY,iCAAmC,EACjD,GAEA,SAAA,CAACsC,EAAA,IAAA,IAAA,CAAE,UAAU,YAAY,SAAC,IAAA,EAC1BD,EAAAA,KAAC,MAAI,CAAA,UAAU,oEAAoE,SAAA,CAAA,IAC/ExB,EAAW,UAAA,EACf,EACAwB,EAAAA,KAAC,MAAI,CAAA,UAAU,gEAAgE,SAAA,CAAA,IAC3ExB,EAAW,KAAA,CACf,CAAA,CAAA,CAAA,EAhBK,QAAQD,CAAQ,IAAIQ,CAAK,EAiBhC,CAEH,CAAA,EACH,EAEAkB,EAAA,IAAC,SAAA,CACC,QAAS9B,EACT,SAAUR,EACV,aAAW,YACX,UAAW,2JACTA,EACI,iCACA,4CACN,GAEC,WAAY,aAAe,WAAA,CAAA,CAC9B,EACF,CAEJ,ECnKMwC,EAAa,IAAM,CACvB,KAAM,CAAE,OAAA7C,EAAQ,WAAA8C,EAAY,QAAAC,EAAS,YAAAC,EAAa,WAAAC,GAAe/C,EAAU,EACrE,CAAE,SAAAgD,CAAS,EAAIC,EAAW,EAC1B,CAAE,MAAAC,CAAM,EAAIC,EAAS,EACrB,CAACC,EAAYC,CAAa,EAAIhD,EAAAA,SAAS,UAAU,EACjD,CAACiD,EAAcC,CAAe,EAAIlD,EAAAA,SAAS,IAAI,EAC/C,CAACmD,EAAeC,CAAgB,EAAIpD,EAAAA,SAAS,CAAA,CAAE,EAE/CqD,EAAmB,CAACC,EAAIC,EAAS,IAAM,CAC3C,MAAMC,EAAUb,EAAS,KAAMc,GAAMA,EAAE,KAAOH,CAAE,EAChD,GAAI,CAACE,EAAS,CACJ,QAAA,MAAM,WAAWF,CAAE,aAAa,EACxC,MAAA,CAGF,GAAIE,EAAQ,KAAOL,EAAcG,CAAE,EAAG,CACpC1B,EAAM,KAAK,KAAK4B,EAAQ,KAAK,gCAAiC,CAC5D,SAAU,YACV,UAAW,IACX,aAAc,GACd,gBAAiB,EAAA,CAClB,EACD,MAAA,CAGI,MAAAE,EAAeP,EAAcG,CAAE,GAAK,EACpCK,EAAYH,EAAQ,MAAQE,EAAe,GAE7CjE,EAAO,MAAQkE,GACjBpB,EAAWoB,CAAS,EACpBjB,EAAWY,EAAIC,CAAM,EACrBH,EAAkBQ,IAAU,CAC1B,GAAGA,EACH,CAACN,CAAE,EAAGI,EAAe,CAAA,EACrB,EACFN,EAAiBX,GAAa,EAExBb,EAAA,QACJ,MAAM4B,EAAQ,KAAK,sBAAsBE,EAAe,CAAC,IACzD,CACE,SAAU,YACV,UAAW,IACX,aAAc,GACd,gBAAiB,EAAA,CAErB,GAEM9B,EAAA,MACJ,eAAe+B,EAAYlE,EAAO,IAAI,kBAAkB+D,EAAQ,KAAK,GACrE,CACE,SAAU,YACV,UAAW,IACX,aAAc,GACd,gBAAiB,EAAA,CAErB,CAEJ,EAEMK,EAAiB,CAACC,EAAUC,IAAiB,CAC7C,GAAAtE,EAAO,MAAQsE,EAAa,KAAM,CACpCxB,EAAWwB,EAAa,IAAI,EACtB,MAAAC,EAAOD,EAAa,WAAW,EACrCvB,EAAQwB,CAAI,EACZd,EAAgBY,CAAQ,EAExBlC,EAAM,QAAQ,aAAakC,CAAQ,kBAAkBE,CAAI,QAAS,CAChE,SAAU,YACV,UAAW,IACX,aAAc,GACd,gBAAiB,EAAA,CAClB,EAED,WAAW,IAAMd,EAAgB,IAAI,EAAG,GAAG,CAAA,MAErCtB,EAAA,MACJ,eACEmC,EAAa,KAAOtE,EAAO,IAC7B,sBAAsBqE,CAAQ,GAC9B,CACE,SAAU,YACV,UAAW,IACX,aAAc,GACd,gBAAiB,EAAA,CAErB,CAEJ,EAEA3D,OAAAA,EAAAA,UAAU,IAAM,CACdiD,EAAiBX,GAAa,CAAA,EAC7B,CAAChD,EAAO,QAAQ,CAAC,EAGlB0C,EAAA,KAAC,QAAM,CAAA,UAAU,0EAEf,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,SAAO1C,EAAO,KAAK,QAAQ,CAAC,CAAA,EAAE,EACnE0C,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMY,EAAc,UAAU,EACvC,UAAU,kDACX,SAAA,UAAA,CAED,EACAZ,EAAA,IAAC,SAAA,CACC,QAAS,IAAMY,EAAc,OAAO,EACpC,UAAU,kDACX,SAAA,OAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAECD,IAAe,YACbX,MAAA,MAAA,CAAI,UAAU,gDAEb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACZ,SAASO,EAAA,IAAKa,GAAY,CACzB,MAAME,EAAeP,EAAcK,EAAQ,EAAE,GAAK,EAC5CS,EAAWT,EAAQ,MAAQE,EAAe,GAC1CQ,EAAUR,GAAgBF,EAAQ,IAClCW,EAAe1E,EAAO,MAAQwE,EAC9BG,EAAaF,GAAW,CAACC,EACzBE,EAAQH,EACV,MACAR,EAAe,EACf,UACA,MAGF,OAAAvB,EAAA,KAAC,MAAA,CAEC,UAAW,6HAEX,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,4FACX,SAAA,CAAQqB,EAAA,MACTpB,EAAAA,IAAC,KACE,SAAesB,EAAA,GACd,QAAQA,CAAY,UAAUF,EAAQ,GAAG,GAC7C,CAAA,CAAA,EACF,EACArB,EAAAA,KAAC,KAAG,CAAA,UAAU,4EAA4E,SAAA,CAAA,SACjF8B,CAAA,EACT,EACC7B,EAAA,IAAA,IAAA,CAAE,UAAU,4EACV,WAAQ,YACX,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMiB,EAAiBG,EAAQ,EAAE,EAC1C,UAAW;AAAA;AAAA;AAAA,MAIzBY,EACI,iCACA,8CACN;AAAA;AAAA,IAGgB,SAAUA,EAET,SAAAC,CAAA,CAAA,CACH,CAAA,EA/BKb,EAAQ,EAgCf,CAAA,CAEH,EACH,CACF,CAAA,EAIDT,IAAe,SACbX,EAAA,IAAA,MAAA,CAAI,UAAU,yDACZ,SAAA,OAAO,QAAQS,CAAK,EAAE,IAAI,CAAC,CAACiB,EAAUC,CAAY,IAAM,CAEjD,MAAAK,EAAa,EADE3E,EAAO,MAAQsE,EAAa,OACbd,IAAiBa,EAC/CQ,EAAcF,EAChB,kCACA,iDAEEC,EACJpB,IAAiBa,EAAW,UAAY,QAAQA,CAAQ,GAGxD,OAAA3B,EAAA,KAAC,MAAA,CAEC,UAAU,4DAEV,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,oBAAqB,SAAS0B,EAAA,EAC5C3B,EAAAA,KAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,CAAA,SAAO4B,EAAa,KAAK,QAAA,EAAM,EAC5D3B,EAAA,IAAC,SAAA,CACC,UAAW,GAAGkC,CAAW,gCACzB,QAAS,IAAMT,EAAeC,EAAUC,CAAY,EACpD,SAAUK,EAET,SAAAC,CAAA,CAAA,CACH,CAAA,EAXKP,CAYP,CAAA,CAEH,CACH,CAAA,CAAA,EAEJ,CAEJ,EChNMS,EAAO,IAETpC,EAAA,KAAC,OAAK,CAAA,UAAU,wEACd,SAAA,CAAAC,EAAA,IAACE,EAAW,EAAA,QACX9C,EAAS,CAAA,CAAA,CAAA,EACZ"}